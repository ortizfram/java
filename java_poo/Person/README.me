Make a class called Person that has the following attributes: name, age,
sex ('M' male, 'M' female, 'O' other), weight and height. If the student wishes to add any
another attribute, you can. The methods to be implemented are:
• A default constructor.
• A constructor with all attributes as parameters.
• Getter and setter methods for each attribute.
• CreatePersona() method: the create person method asks for the values ​​of the attributes
to the user and then assigned to their respective attributes to populate the object
Person. Also, check that the entered gender is correct, i.e. H, M or
O. If it is not correct, a message should be displayed
• Method calculateBMI(): it will calculate if the person is in his ideal weight (weight in
kg/(height^2 in mt2)). If this formula returns a value less than 20, it means
that the person is below their ideal weight and the function returns -1. If the
formula results in a number between 20 and 25 (included), it means that the person
is at its ideal weight and the function returns a 0. Finally, if the result of the
formula is a value greater than 25 means that the person is overweight, and the
function returns a 1.
• esMayorDeEdad() method: indicates if the person is of legal age. The function
returns a boolean.
Then in the main class do the following:
Create 4 objects of type Person with different values, then we will call all
the methods for each object, you should check if the person is at their ideal weight,
is overweight or underweight and indicate for each item whether the
person is of legal age.
Lastly, we will save the results of the calculateBMI and isOlderAge methods.
in different variables, to later in the main, calculate a percentage of those 4
people, how many are underweight, how many are at their ideal weight, and how many, for
above, and we will also calculate a percentage of how many are of legal age and
how many minors
